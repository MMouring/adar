name: Deploy Lambda Layers and Services

on:
  # Trigger on push to main branch
  push:
    branches: 
      - main
      - stage
  
  # Allow manual triggers with environment selection
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target deployment environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

# Environment variables used across jobs
env:
  DEFAULT_REGION: us-east-1
  NODE_ENV: production
  AWS_MAX_ATTEMPTS: 3

# Required permissions for OIDC authentication
permissions:
  id-token: write   # Required for AWS OIDC auth
  contents: read    # Required for checkout

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'stage' || 'dev') }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ADMIN_ROLE_ARN }}
          aws-region: ${{ env.DEFAULT_REGION }}
          
      - name: Install project dependencies
        run: npm ci --no-audit
        continue-on-error: false
        
      - name: Run test suite
        run: npm test
        env:
          npm_config_skiptests: ${{ github.event.inputs.environment == 'prod' && 'false' || 'true' }}
          
      - name: Deploy CloudFormation stack
        run: |
          npm run deploy || exit 1
        env:
          npm_package_config_env: ${{ github.event.inputs.environment || (github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'stage' || 'dev') }}
          npm_package_config_accounts: ${{ vars.TARGET_ACCOUNTS }}
          npm_package_config_regions: ${{ vars.TARGET_REGIONS }}

      - name: Create Release
        if: github.ref == 'refs/heads/main' && success()
        uses: ./.github/workflows/release.yml
        with:
          version_bump: 'patch'
