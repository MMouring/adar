name: Stage - CloudFormation StackSet Deployment

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    branches: ["main"]

env:
  AWS_ADMIN_ACCOUNT_ID: ${{ vars.AWS_ADMIN_ACCOUNT_ID }}
  AWS_ADMIN_REGION: "us-east-1"
  AWS_DEPLOYMENT_ROLE_ARN: ${{ vars.AWS_DEV_DEPLOYMENT_ROLE_ARN }}
  ENVIRONMENT: "stage"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: stage
    permissions:
      id-token: write
      contents: read
      deployments: write
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_DEPLOYMENT_ROLE_ARN }}
          role-session-name: "stage-deployment"
          aws-region: ${{ env.AWS_ADMIN_REGION }}
          audience: "sts.amazonaws.com"
          mask-aws-account-id: "false"
          role-external-id: "stage"


      - name: Set up accounts and regions map
        run: |
          ACCOUNTS_AND_REGIONS='{
            "AWS_DEV_1": {
              "account_id": "'${{ vars.AWS_DEV_ACCOUNT_ID }}'",
              "regions": ["us-east-1"]
            }
          }'
          echo "ACCOUNTS_AND_REGIONS=$ACCOUNTS_AND_REGIONS" >> $GITHUB_ENV

      - name: Package Python Requirements
        run: |
          chmod +x scripts/package-python-requirements.sh
          ./scripts/package-python-requirements.sh

      - name: Upload CloudFormation Template
        run: |
          chmod +x scripts/upload-cloudformation.sh
          ./scripts/upload-cloudformation.sh

      - name: Deploy CloudFormation StackSet
        run: |
          chmod +x scripts/deploy-stackset.sh
          ./scripts/deploy-stackset.sh
