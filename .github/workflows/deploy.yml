name: Deploy Lambda Layers

on:
  push:
    branches: [ main, stage ]
  pull_request:
    branches: [ main, stage ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'stage' || 'dev') }}

    env:
      AWS_DEPLOY_ARN: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_ROLE_NAME }}"
      AWS_STACK_ADMIN_ARN: ${{ secrets.AWS_STACK_ADMIN_ARN }}
      DEFAULT_ACCOUNT: ${{ vars.AWS_ACCOUNT_ID }}
      DEFAULT_REGION: ${{ vars.AWS_REGION }}
      TARGET_ACCOUNTS: ${{ vars.TARGET_ACCOUNTS }}
      TARGET_REGIONS: ${{ vars.TARGET_REGIONS }}
      ENV: ${{ github.event.inputs.environment || (github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'stage' || 'dev') }}
      STACK_SET_NAME: "hotel-planner-google-ads-editor-stack-set"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_STACK_ADMIN_ARN }}
          aws-region: ${{ env.DEFAULT_REGION }}

      - name: Package Python Layers
        run: npm run package:python-layers

      - name: Deploy Stack Set
        run: npm run deploy
